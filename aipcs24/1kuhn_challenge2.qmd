---
title: "#1: Kuhn Poker | Challenge (Part 2)"
sidebar: aipcs24
format:
  html:
    math: true
    css: styles.css
    header-includes: |
      <script src="https://d3js.org/d3.v7.min.js"></script>
---
## Challenge Part 2: Automatic Solver
<div id="locked_message">
  This section is locked until you complete <a href=1kuhn_challenge.html#part-1-manual-solutions>part 1</a>.
</div>

<div id="lock_this" style="display:none;">
:::{.callout-note  appearance="minimal"}
## Challenge part 2: submission and leaderboard

<p><del>The strategy that you used to unlock this stage has been submitted to the leaderboard; you can see it as name <span class=submission_id>[submission id]</span> below. You can resubmit to replace it with another strategy as many times as you like using the "Submit" button below.</del> The preceding sentences will be true when the challenge goes live, expect Tuesday or Wednesday.</p>

Next, use the automatic solver tool below to refine your strategies for each player in terms of the fixed action probabilities at each player's infosets. For this challenge, we recommend that you submit strategies that form a Nash equilibrium (or equivalently, a pair of strategies such that neither player has regret).

Once you have a strategy that you believe improves on your current submission, you <del>can re-submit and wait for the results to be re-run (which may take some minutes)</del> will later be able to submit it and see the results against other entries.
:::

<div id="tree_visualization_400b" class="tree_visualization"></div>
 
:::{.callout-tip collapse="true" appearance="minimal"}
## Solver controls

- The site should save your progress if you navigate away or refresh, though might lose the last few edits, depending.
- It doesn't have any help for sharing solutions between teammates, sorry.
- At each iteration, the solver will update all 12 nodes (in some arbitrary order), using a rule modified by the update parameters:
  - a magnitude multiplier
  - how to scale the update based on EV (currently supports: no effect or linearly)
  - how to scale the update based on the infoset's visit probability (currently supports: no effect or linearly)
  - whether to use a learning rate to decay the magnitude over time (currently supports: no decay, or linear in the sum of updates made to this infoset since reset)
  - whether to update probability or odds
- You can set it to run for a number of iterations. (If you accidentally set it to too many, you can stop the solver by pressing "Stop" or by reloading the page.)
- Speed is hopefully self-explanatory.
- Tolerance controls the difference between action EVs that is too small to update on.
:::
 
<div id="simulation_controls" style="border: 1px solid black; padding-top: 0.5em; padding-left: 0.5em; margin-bottom: 1em; width: 42.9em;e">
<div style="display: inline-block; margin-right: 1em;">
  <label for="update_mode" style="margin-right: 0.1em;">Update:</label>
  <select id="update_factor" style="padding: 0.2em; width: 6.6em;">
    <option value="1.0" selected="selected">100%</option>
    <option value="0.1">10%</option>
    <option value="0.01">1%</option>
    <option value="0.001">0.1%</option>
    <option value="0.0001">0.01%</option>
    <option value="0.00001">0.001%</option>
  </select>
  <select id="scale_by_ev" style="padding: 0.2em; width: 6.6em;">
    <option value="false" selected="selected">×1</option>
    <option value="true">×EVdiff</option>
  </select>
  <select id="scale_by_visit_prob" style="padding: 0.2em; width: 6.6em;">
    <option value="false" selected="selected">×1</option>
    <option value="true">×p(visit)</option>
  </select>
  <select id="scale_by_total_updates" style="padding: 0.2em; width: 6.6em;">
    <option value="false" selected="selected">×1</option>
    <option value="true">/Σupdates</option>
  </select>
  <select id="use_odds" style="padding: 0.2em; width: 6.6em;">
    <option value="false" selected="selected">probability</option>
    <option value="true">odds</option>
  </select>
</div>
<div> 
<div style="display: inline-block; margin-right: 0.8em;">
  <button id="start_simulator" style="padding: 0.5em 1em; color: white; background-color: #2fa4e7" onclick="startSimulator()">Run Solver</button>
</div>
<div style="display: inline-block; margin-right: 1em; font-size: 0.8em;">
  <label for="num_iterations" style="margin-right: 0.1em;">Iterations:</label>
  <select id="num_iterations" style="padding: 0.2em;">
    <option value="1" selected="selected">1</option>
    <option value="10">10</option>
    <option value="100">100</option>
    <option value="1000">1,000</option>
    <option value="10000">10,000</option>
    <option value="100000">100,000</option>
  </select>
</div>
      
<div style="display: inline-block; margin-right: 1em; font-size: 0.8em;">
  <label for="wait_per_step" style="margin-right: 0.1em;">Speed:</label>
  <select id="wait_per_step" style="padding: 0.2em;">
    <option value="0" selected="selected">Max</option>
    <option value="10">Fast</option>
    <option value="100">10/sec</option>
    <option value="333">3/sec</option>
    <option value="1000">1/sec</option>
  </select>
</div>
      
<div style="display: inline-block; margin-right: 1em; font-size: 0.8em;">
  <label for="tolerance" style="margin-right: 0.1em;">Tolerance:</label>
  <select id="tolerance" style="padding: 0.2em;">
    <option value="0.3">0.30 chip</option>
    <option value="0.1">0.10 chip</option>
    <option value="0.03">0.03 chip</option>
    <option value="0.01" selected="selected">0.01 chip</option>
    <option value="0.003">0.003 chip</option>
</select>
</div>
</div>
</div>

<div id="subtree_visualizations" style="max-width: 750px;"></div>

### Submit to leaderboard

&lt;Nothing here yet; check back later.&gt;

<div style="display:none">
<button id="submit_strategy" style="padding: 0.5em 1em; color: white; background-color: #2fa4e7" onclick="submitStrategy()">Submit Strategy to Leaderboard</button>

<div id="leaderboard">
  TODO: leaderboard goes here.
</div>
</div>
</div>

<script>
  function unlock_next() {
      document.getElementById("locked_message").style.display = "none";
      document.getElementById("lock_this").style.display = "";
  };
</script>
<div id="unlock_next" style="display:none"></div>

<script src="index.js"></script>
<script>
  /* global create_tree */
  create_tree("tree_visualization_400b", 4.0, true);
</script>
