---
title: "#3 Rock Paper Scissors: Challenge"
sidebar: aipcs24
format:
  html:
    math: true
---
## The Challenge
This week's challenge game will be **Paper, Scissors, Maybe Rock (PSMR)**.

Each player is assigned a probability ($X0$ or $X1$), which is shown to them but hidden from their opponent. This will be constant for the 1,000 rounds of a match.

For each round, each player is dealt a card. With probability $X_i$, player $i$ receives a $3$, otherwise they receive a $2$. Cards are never revealed to a player's opponent.

If you're dealt a $3$, you can play Rock, Paper, or Scissors. If you're dealt a $2$, you can only play Paper or Scissors.

Rock beats Scissors beat Paper beat Rock, and the winner of a round wins 1 chip from the loser.

You will ultimately play something like 20 matches (of 1k rounds each) against each opponent. We'll balance matches between pairs of players and across players.

The field will include at least: 

- a bot that tries to play $1/3$ - $1/3$ - $1/3$ or as close as it can
- a bot that plays what would be Nash for it if the opponent were unconstrained
- a bot that is my best attempt to do a reasonable thing, limited by the amount of time we actually decide to spend on it

We aren't intending to say much more about how the $X_0$, $X_1$ probabilities will be generated, and no your bot should not be communicating with itself between matchups or phoning home to you. (It should be storing info for itself round-to-round within a matchup, however.)

In the current handout version of `challenge-3-psmr` in `aipc-challenges`, you can configure the $X0$, $X1$ by editing `duplicates.txt`. 

The game doesn't tell these to players yet, though, so at some point we'd like to push a version that does.

### Pre-Challenge Exercises
As pre-challenge exercises, you may want to get a CFR solver running and able to solve:

- Regular unconstrained RPS

- PSMR with ( $X0$, $X1$ ) = ( $1$, $0$ )

The connection of these to the bot-writing portion of the challenge is up to you.

## Rock Paper Scissors

Rock Paper Scissors was [proposed in 2023 to be a "benchmark for multiagent learning"](https://openreview.net/pdf?id=gQnJ7ODIAx) in a paper written primarily by DeepMind. 

The paper explains that agents are often measured by (a) average return or (b) robustness against a nemesis agent that tries to minimize the agent's returns. Yet it's important for agents to be able to maximize returns *and* be robust to adversaries. 

Why is RPS a good benchmark?

1. It's a repeated game with sequential decisions

2. Performance is measured against a population of varied skills

<!-- 
### RPS Bot Ideas

1. Look at opponent action 2 moves ago and randomize between that action and the action that beats it 

2. Look at opponent action 2 moves ago and randomize between the other 2 actions

3. [Iocaine Powder](https://web.archive.org/web/20160819141717id_/http://www.ofb.net/~egnor/iocaine.html) 

4. Use online CFR

5. Beat last move

6. Beat last 10 moves

7. If win, do the same thing again. If lose, randomize. 

8. Look at my own history and what opponent will estimate that I'm playing. Beat the thing they will play to beat me. 

9. Use percentages that are fixed/slowly moving

10. Track opponent with +1

11. More soon...

## RPS Academic Research

1. [*Nonparametric Strategy Test*, Sam Ganzfried](https://arxiv.org/abs/2312.10695)

This paper takes Rock Paper Scissors sample data from 500 human players who each played 50 games. It does an experiment to see if (a) they are playing the uniform 1/3 1/3 1/3 strategy and (b) that the actions chosen are independent between games. The paper finds that 61% of players are doing so. 

More soon... -->
<!-- 
Humans are predictably irrational

What he discovered was that the student’s decisions during the game tended towards the Nash Equilibrium, which would be picking rock 1/3 of the time, scissors 1/3 of the time, and paper 1/3 of the time. However, despite the Nash Equilibrium, he noticed a pattern with how the games were played. Winners tended to stick with their same strategy, and losers would move on to another strategy. This would repeat for every time a player lost, which he calls “persistent cyclic flows”.

1. Basics of non-Nash responses

1. Advice on parametrizing opponent strategies

2. Online CFR Minimization won’t cut it here – why? -->