---
title: "#2: Leduc Poker | Challenge"
sidebar: aipcs24
format:
  html:
    math: true
    css: styles.css

---
## Leduc Poker Rules
Leduc Poker is a simple toy poker game invented at the University of Alberta. 

![Alberta's nearby Edmonton Airport is in the city of Leduc](assets/leducmap.png)

Here is the setup: 

- 6 card deck: 2 Queens, 2 Kings, 2 Aces (in ascending order, so Ace is highest)

- Leduc Poker is played with 2 players. We'll again use <span class="player p1"></span> and <span class="player p2"></span>.

- Each player antes 1 chip

- Deal 1 card to each player

- Betting round 1 (preflop): 
  - There is a fixed bet size of 2 chips
  - Rule in original version that we are *not* using: There is a maximum of 2 bets per round (i.e. a bet and a raise)

- Deal a face up community card
  - Players make the best 2 card hand combining their card and the community card, meaning a pair is the best possible hand

- Betting round 2 (the flop): 
  - There is a fixed bet size of 4 chips
  - Rule in original version that we are *not* using: There is a maximum of 2 bets per round (i.e. a bet and a raise)

Here is a game situation in which: 
- Both players anted 1 each
  - Pot = 2
- Preflop: Bet and call preflop of 2 each
  - Pot = 6
- Flop: Community card K revealed. Player 1 bets 4. Player 2 to act.

![](assets/leducgame.png)

:::{.callout-note  appearance="minimal"}
## Leduc Infoset

What is Player 2's infoset?

:::{.callout-warning collapse="true" appearance="minimal"}
## Solution
1[2,2][4]
:::

:::{.callout-note  appearance="minimal"}
## Leduc Ties

How often will you and your opponent be dealt the same card? 
:::

:::{.callout-warning collapse="true" appearance="minimal"}
## Solution
First we find the total combinations of cards: 

${6\choose2} = \frac{6!}{4!*2!} = \frac{6*5}{2} = 15$

Then we count that there is exactly $1$ way to make Q/Q, $1$ way to make K/K, and $1$ way to make A/A. Therefore the probability of having the same hand as your opponent is $\frac{3}{15} = 0.2$. 
:::

:::{.callout-note  appearance="minimal"}
## Leduc Pairs

How often will you hit a pair on the flop given that you see it? 
:::

:::{.callout-warning collapse="true" appearance="minimal"}
## Solution
You have the same card as your opponent $20\%$ of the time, in which case you cannot get a pair. 

In the other cases, there are $4$ cards remaining in the deck and $1$ of them matches yours, so you have a $0.25$ chance in this case. 

$\Pr(\text{Pair} \mid \text{See Flop}) = 0.2*0 + 0.8*0.25 = 0.2 $
:::

:::{.callout-note  appearance="minimal"}
## Leduc Basic Challenge

Find an optimal strategy for Leduc Poker (a) with a maximum of 2 bet sizes per round and (b) with no maximum number of bets per round. Let players start with 50 chips in both cases.  
:::

## Kuhn Poker 100 Cards

Kuhn Poker with 100 cards plays the same as Kuhn Poker with 3 cards, but the cards are numbered from 1 to 100 (or 0 to 99). 

Kuhn Poker with 3 cards has 6 infosets per player, 12 total. These scale linearly and so with 100 cards there are 400 infosets since each card has 4 infosets:
 - P1 acting first
 - P2 facing an Up action
 - P2 facing a Down action
 - P1 after a Down-Up sequence

 :::{.callout-note  appearance="minimal"}
## Kuhn Basic Challenge

Find an optimal strategy for 100 card Kuhn Poker and compare the game value in 100 card Kuhn Poker to 3 card Kuhn Poker.
:::

### Card Abstraction

100 card Kuhn Poker is a good testbed for **card abstraction**. Card abstraction is a method for shrinking a large game to a more manageable size. 

:::{.callout-note  appearance="minimal"}
## Kuhn Bonus Challenge

Abstract 100 card Kuhn Poker into 10 uniform buckets and find the game value. Compare this to your previous 100 card and 3 card Kuhn Poker values. Is there a better way to configure the 10 buckets than uniform?
:::

## Solver
- infosets (example in solver)
(P1)[0, None][Down, Up]: {Down: 1.0, Up: 0.0}
(P1)[0, None][]       : {Down: 0.8150489886962787, Up: 0.1849510113037213}
(P1)[1, None][Down, Up]: {Down: 0.36837888738186775, Up: 0.6316211126181323}
(P1)[1, None][]       : {Down: 0.8131365930381713, Up: 0.18686340696182863}
(P1)[2, None][Down, Up]: {Down: 0.0, Up: 1.0}
(P1)[2, None][]       : {Down: 0.37332197949312035, Up: 0.6266780205068797}
(P2)[None, 0][Down]   : {Down: 0.7737705468066861, Up: 0.22622945319331383}
(P2)[None, 0][Up]     : {Down: 1.0, Up: 0.0}
(P2)[None, 1][Down]   : {Down: 0.9714280084961201, Up: 0.028571991503879877}
(P2)[None, 1][Up]     : {Down: 0.35544435642226935, Up: 0.6445556435777307}
(P2)[None, 2][Down]   : {Down: 0.0, Up: 1.0}
(P2)[None, 2][Up]     : {Down: 0.0, Up: 1.0}

| Player | Cards    | Actions       | Strategy                                        |
|--------|----------|---------------|-------------------------------------------------|
| P1     | [0, None] | [Down, Up]    | {Down: 1.0, Up: 0.0}                            |
| P1     | [0, None] | []            | {Down: 0.8150489886962787, Up: 0.1849510113037213} |
| P1     | [1, None] | [Down, Up]    | {Down: 0.36837888738186775, Up: 0.6316211126181323} |
| P1     | [1, None] | []            | {Down: 0.8131365930381713, Up: 0.18686340696182863} |
| P1     | [2, None] | [Down, Up]    | {Down: 0.0, Up: 1.0}                            |
| P1     | [2, None] | []            | {Down: 0.37332197949312035, Up: 0.6266780205068797} |
| P2     | [None, 0] | [Down]        | {Down: 0.7737705468066861, Up: 0.22622945319331383} |
| P2     | [None, 0] | [Up]          | {Down: 1.0, Up: 0.0}                            |
| P2     | [None, 1] | [Down]        | {Down: 0.9714280084961201, Up: 0.028571991503879877} |
| P2     | [None, 1] | [Up]          | {Down: 0.35544435642226935, Up: 0.6445556435777307} |
| P2     | [None, 2] | [Down]        | {Down: 0.0, Up: 1.0}                            |
| P2     | [None, 2] | [Up]          | {Down: 0.0, Up: 1.0}                            |


For a given P1 strategy and P2 strategy, a player has regret when they take an action at an infoset that was not the highest-EV action at that infoset. The amount of regret is the difference between the highest-EV action and the selected action. 

:::{.callout-note  appearance="minimal"}
## Exercise

![](assets/basictree.png)

What is the regret for each action? 

| Action     | Regret |
|------------|-----------|
| A      |           |
| B     |  |
| C     |   |


- regret (bandits)
- EV
- tree 

## Solving Poker Games
Nash equilibrium 
Prebuilt solver options
Infosets

### Gradient Descent
https://www.cs.cmu.edu/~gilpin/papers/egt.optimizationonline08.pdf
https://www.columbia.edu/~ck2945/papers/foms_efg_math_prog.pdf 

### CFR  
https://arxiv.org/pdf/1811.00164
- general algorithm
  - store: strategy, regret
  - regret matching
  - average strategy at end
  - CFR+, Linear CFR
  - sampling (external, sampling, chance, etc. )

[Slides, what to include?](https://docs.google.com/presentation/d/11S85i83OVb8SbPRAs9i3ygyXrv7e4SsUXxBloc04iHM/edit)

