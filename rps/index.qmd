---
title: "Rock Paper Scissors Hackathon"
format:
  html:
    math: true
---
**R**ock **P**aper **S**cissors Hackathon by [Poker Camp](https://poker.camp)

## [Sign up now!](https://lu.ma/rps-hackathon) 

[![](rps_banner.png){width=50%}](https://lu.ma/rps-hackathon)

$20 entry fee to cover lunch and snacks

**[🪨📄✂️ Click here to sign up on Luma! ✊✋✌️](https://lu.ma/rps-hackathon)**

## Event Details
**What:** ​8 rounds of Rock Paper Scissors bot competitions. All entrants play 1000 games against each other in each round. We'll have our own bots that start on easy mode, and smarter ones will be added as the rounds go on.

Each round you'll get a score vs. our bots, vs. other participants, and overall. 

**When:** Sunday Sep 8, 2024 11am-5pm (can arrive starting at 10:30am)

**Why:**

From DeepMind in 2023: 

> In sequential decision-making, agent evaluation has largely been  restricted to few interactions against experts, with the aim to reach some desired level of performance (e.g. beating a human professional player). We propose a benchmark for multiagent learning based on repeated play of the simple game Rock, Paper, Scissors.  

**How:** [Click here to sign up on Luma!](https://lu.ma/rps-hackathon) ($20 entry fee to cover lunch and snacks)

**Where:** [Fractal Tech Hub](https://fractalbootcamp.com/office): [111 Conselyea St, Brooklyn NY](https://maps.app.goo.gl/fuZpTaLtaxy9W4v98)

<iframe src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d6048.25343208826!2d-73.9467208!3d40.715226900000005!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x89c259574c8d3d9f%3A0x50a89962ece47d61!2s111%20Conselyea%20St%2C%20Brooklyn%2C%20NY%2011211!5e0!3m2!1sen!2sus!4v1723515244564!5m2!1sen!2sus" width="400" height="300" style="border:0;" allowfullscreen="" loading="lazy" referrerpolicy="no-referrer-when-downgrade"></iframe>

## How it Works

**Competition structure:** 

- Rock defeats scissors, scissors defeats paper, and paper defeats rock
- You get 1 point for a win, -1 for a loss, and 0 for ties
- Each round, you'll play 1000 game matches against each hackathon participant and each of our bots
- We'll put in 1-3 bots during each round and they'll stay in for all rounds going forward

**How do I write my own bot?**

- We'll give you starter code in Python 
- Starter code will show how to make a bot that plays any fixed percentage
- Starter code will show how to make a bot that plays some strategy according to the history of actions

**How do I submit?**

- For each competition, you can submit up to the end of that round
- Each submission *during* the round will receive a *test result* based on how that bot would have done in the *previous* round
    - Doing better in the previous round is a sign of progress, but may not actually result in a better score in the current round, which will have updated hackathon bots and newly inserted bots of our own 
- At the end of each round, we'll run the tournament and show the results ~5 minutes later

**What's the point of this?**: 

- Fun
- Thinking about strategy in a repeated game against a variety of opponents

**Are there prizes?**

There will be small on-theme prizes 

**Will you tell us about the bots that you're putting in?**

Each round will vary. Sometimes we'll give away the bots, sometimes we'll give no info, and sometimes there will be a hint. 

**What if I have to leave early or arrive late?**

No problem, you can join for however much you'd like

**Can I participate if I'm not in NYC?**

Sorry, but we're doing this as an in-person event only. We hope to run virtual events in the future. 

<!-- **How did RPS work historically??** -->

**Can I pay in cash or with Venmo/Zelle?**

Yes, [email us](mailto:max@poker.camp)

**Other questions?**

[Get in touch](mailto:max@poker.camp)

### Schedule

**10:30am:** Doors open

**11:00am:** Arrival and setup

**11:30am:** Begin Competition 1

**12:00pm:** Competition 1 results, begin Competition 2

**12:30pm:** Competition 2 results, pizza lunch break

**1:00pm:** Begin Competition 3

**1:30pm:** Competition 3 results, begin Competition 4

**2:00pm:** Competition 4 results, begin Competition 5

**2:30pm:** Competition 5 results, begin Competition 6

**3:00pm:** Competition 6 results, begin Competition 7

**3:30pm:** Competition 7 results, begin Competition 8

**4:00pm:** Final results and bot explanations

**4:30pm:** Hangout

**5:00pm:** End

## Strategy
Each round you'll be facing off against a selection of our bots and other hackathon participants. 

<!-- ![](m.png) -->
![](history.jpeg)

### Game Theory Equilibrium

RPS is a zero-sum game and the payouts are symmetrical as follows: 

| Player 1/2 | Rock    | Paper   | Scissors |
|--------|---------|---------|----------|
| Rock   | (0, 0)  | (-1, 1) | (1, -1)  |
| Paper  | (1, -1) | (0, 0)  | (-1, 1)  |
|Scissors| (-1, 1) | (1, -1) | (0, 0)   |

The Nash Equilibrium strategy is to play each action $r = p = s = 1/3$ of the time. 

:::{.callout-tip collapse="true" appearance="minimal"}
## Nash Equilibrium Strategy for RPS
If Player 1 plays Rock with probability $r$, Paper with probability $p$, and Scissors with probability $s$, we have the following expected value equations for Player 2: 

$\mathbb{E}(\text{R}) = -1p + 1s$

$\mathbb{E}(\text{P}) = 1r - 1s$

$\mathbb{E}(\text{S}) = -1r + 1p$

Since no action dominates, we know that the EV of every strategic action should be equal  (since if a certain strategy was best, we'd want to always play that strategy). 

To solve for $r$, $p$, and $s$, we can start by setting these EVs equal: 

$\mathbb{E}(\text{R}) = \mathbb{E}(\text{P})$

$-1p + 1s = 1r - 1s$

$2s = p + r$

Then setting these equal: 

$\mathbb{E}(\text{R}) = \mathbb{E}(\text{S})$

$-1p + 1s = -1r + 1p$

$s + r = 2p$

And finally setting these equal: 

$\mathbb{E}(\text{P}) = \mathbb{E}(\text{S})$

$1r - 1s = -1r + 1p$

$2r = s + p$

Now we have these equations:  

$$
\begin{cases}
2s = p + r \\
s + r = 2p \\
2r = s + p
\end{cases}
$$

We can rewrite the 1st: 

$r = 2s - p$

And combine with the 2nd: 

$s + (2s - p) = 2p$

$3s = 3p$

Resulting in: 

$s = p$

Now we can go back to the 2nd equation: 

$s + r = 2p$

And insert $s$ = $p$: 

$s + r = 2s$

And arrive at: 

$r = s$

We now see that all are equal: 

$s = p = r$

We also know that they must all sum to $1$: 

$r + p + s = 1$

Since they're all equal and sum to $1$, we can substitute $p$ and $s$ with $r$: 

$3r = 1$

$r = 1/3$

So all actions are taken with probability $1/3$: 

$r = p = s = 1/3 \quad \blacksquare$
:::

Playing this strategy means that whatever your opponent does, you will breakeven! For example, think about an opponent that always plays Rock. 

$$
\begin{equation}
\begin{split}
\mathbb{E}(\text{Equilibrium vs. Rock}) &= r*0 + p*1 + s*-1 \\
&= 1/3*0 + 1/3*1 + 1/3*-1 \\
&= 0
\end{split}
\end{equation}
$$

<!-- 
You can see this interactively below: 

<iframe src="rps_strategy.html" width="100%" height="600" style="border:none;"></iframe> -->

### Adapting to Opponents

<iframe width="560" height="315" src="https://www.youtube.com/embed/b0SoKWLkmLU?si=0AQ3_NgHOe4tc4OU" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>

*Play more like Lisa*

Suppose that your opponent always plays Rock. What's the best counter-strategy? To always play Paper! 

Instead of breaking even with the equilibrium strategy, you'd now be gaining $1$ every game by always winning. 

The goal of the hackathon is to figure out how to adapt to your opponents (other participants and our bots)! 

You can try playing a few games against the bot on [this site](https://essentially.net/rsp/), which as of writing has won/tied/lost 45%/27%/28%. 